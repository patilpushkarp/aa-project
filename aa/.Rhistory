install.packages("DataExplorer")
install.packages("tidyverse")
plot(cars)
setwd("~/Documents/courses/iim/TERM 1/AA1/Project/aa")
head(df)
df <- read.csv("data/classification_data/input/corporate_credit_rating.csv")
head(df)
library(DataExplorer)
colnames(df)
df %>%
create_report(
output_file = paste("Report", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"), sep=" - "),
report_title = "EDA Report - Corporate Credit Rating",
y = "Rating"
)
library(dplyr)
df %>%
create_report(
output_file = paste("Report", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"), sep=" - "),
report_title = "EDA Report - Corporate Credit Rating",
y = "Rating"
)
install.packages("inspectdf")
library(inspectdf)
column_types
column_types <- inspect_types(df)
column_types
column_types %>% show_plot()
head(df)
# Convert wrongly associated data types to correct ones.
df$CIK <- as.factor(CIK)
# Convert wrongly associated data types to correct ones.
df$CIK <- as.factor(df$CIK)
df$SIC.Code <- as.factor(df$SIC.Code)
plot_str(df)
introduce(df)
plot_intro(df)
inspect_imb(df) %>% show_plot()
inspect_imb(starwars)
inspect_imb(df)
table(df$Rating.Agency)
data.frame(table(df$Rating.Agency))
inspect_imb(df) %>% show_plot()
plot_bar(df)
data.frame(table(df$Rating.Agency))
plot_bar(df)
plot_bar(df)
plot_bar(df)
data.frame(table(df$Rating))
# Find data associated with ratings having less 30 observations
ratings.count.df <- data.frame(table(df$Rating))
colnames(ratings.count.df)
rtl.data <- ratings.count.df[ratings.count.df$Freq<30,]
rtl.data
rtl.data <- ratings.count.df[ratings.count.df$Freq<10,]
rtl.data
plot_histogram(df)
plot_histogram(df)
plot_histogram(df$Debt.Equity.Ratio)
df[df$Debt.Equity.Ratio<-1000,]
plot_boxplot(df)
plot_boxplot(df, by='Rating')
View(df)
plot_boxplot(df, by='Rating')
plot_histogram(df)
plot_boxplot(df, by='Rating')
plot_scatterplot(df, by="Net.Profit.Margin")
plot_scatterplot(df, by="Net.Profit.Margin", sampled_rows = 1000L)
install.packages("ggplot2")
install.packages("ggplot2")
plot_scatterplot(df, by="Net.Profit.Margin")
library(DataExplorer)
library(dplyr)
library(inspectdf)
df <- read.csv("./../data/classification_data/input/corporate_credit_rating.csv")
head(df)
colnames(df)
column_types <- inspect_types(df)
column_types
column_types %>% show_plot()
# Convert wrongly associated data types to correct ones.
df$CIK <- as.factor(df$CIK)
df$SIC.Code <- as.factor(df$SIC.Code)
plot_str(df)
introduce(df)
plot_intro(df)
inspect_imb(df)
inspect_imb(df) %>% show_plot()
plot_bar(df)
data.frame(table(df$Rating.Agency))
# Find data associated with ratings having less 10 observations
ratings.count.df <- data.frame(table(df$Rating))
colnames(ratings.count.df)
rtl.data <- ratings.count.df[ratings.count.df$Freq<10,]
rtl.data
plot_histogram(df)
plot_boxplot(df, by='Rating')
plot_scatterplot(df, by="Net.Profit.Margin")
---
title: "Exploratory Data Analysis"
x %>% dplyr::select(where(is.numeric))
df %>% dplyr::select(where(is.numeric))
num.data <- df %>% dplyr::select(where(is.numeric))
plot_str(
list(
"original" = df,
"dummified" = dummify(df, maxcat = 5L)
)
)
plot_str(df)
plot_correlation(num.data)
plot_correlation(num.data)
# Read the data
df <- read.csv('./../data/classification/input/corporate_credit_rating.csv')
# Read the data
df <- read.csv('./../data/classification_data/input/corporate_credit_rating.csv')
# Read the data
df <- read.csv("./../data/classification_data/input/corporate_credit_rating.csv")
# Read the data
df <- read.csv("./../data/classification_data/input/corporate_credit_rating.csv")
# Remove data of under-represented rating agencies
nreq.rating.agencies <- sort(data.frame(table(df$Rating.Agency)), decreasing = TRUE)
# Remove data of under-represented rating agencies
rating.agency.freq <- data.frame(table(df$Rating.Agency)
# Remove data of under-represented rating agencies
rating.agency.freq <- data.frame(table(df$Rating.Agency))
# Remove data of under-represented rating agencies
rating.agency.freq <- data.frame(table(df$Rating.Agency))
rating.agency.freq
nreq.rating.agencies <- sort(rating.agency.freq$Freq, decreasing = TRUE)
nreq.rating.agencies
nreq.rating.agencies <- rating.agency.freq[sort(rating.agency.freq$Freq, decreasing = TRUE),]
nreq.rating.agencies
nreq.rating.agencies <- rating.agency.freq[order(rating.agency.freq$Freq, decreasing = TRUE),]
nreq.rating.agencies
nreq.rating.agencies <- nreq.rating.agencies[-3:,]
nreq.rating.agencies <- nreq.rating.agencies[-3:]
nreq.rating.agencies <- nreq.rating.agencies[:-3]
nreq.rating.agencies <- nreq.rating.agencies[,:-3]
nreq.rating.agencies <- nreq.rating.agencies[,-3:-1]
nreq.rating.agencies
nreq.rating.agencies <- tail(nreq.rating.agencies, 3)
nreq.rating.agencies
nreq.rating.agencies <- rating.agency.freq[order(rating.agency.freq$Freq, decreasing = TRUE),]
nreq.rating.agencies <- tail(nreq.rating.agencies, 3)
nreq.rating.agencies
nreq.rating.agencies <- nreq.rating.agencies$Var1
nreq.rating.agencies
temp <- df[df$Rating.Agency != nreq.rating.agencies,]
temp <- df[!df$Rating.Agency %in% nreq.rating.agencies,]
dim(temp)
df <- df[!df$Rating.Agency %in% nreq.rating.agencies,]
# Remove correlated columns
cor_mat <- cor(df)
# Remove correlated columns
num.data <- df %>% dplyr::select(where(is.numeric))
cor_mat <- cor(num.data)
index <- findCorrelation(cor_mat, .75)
# Load libraries
library(caret)
install.packages("caret")
index <- findCorrelation(cor_mat, .75)
# Load libraries
library(caret)
index <- findCorrelation(cor_mat, .75)
col.remove <- colnames(cor_mat)[index]
col.remove
col.remove <- colnames(cor_mat)[index][,-2:-1]
col.remove
col.remove <- colnames(cor_mat)[index][,-2:-1]
col.remove <- colnames(cor_mat)[index][-2:-1]
col.remove
col.remove <- colnames(cor_mat)[index][1:2]
col.remove
# Remove correlated columns
num.data <- df %>% dplyr::select(where(is.numeric))
cor_mat <- cor(num.data)
index <- findCorrelation(cor_mat, .75)
col.remove <- colnames(cor_mat)[index][1:2]
col.remove
col.remove <- colnames(cor_mat)[index][1:-2]
col.remove <- colnames(cor_mat)[index]
col.remove <- col.remove[-length(col.remove)]
col.remove
df <- df[!names(df) %in% col.remove]
dim(df)
# Remove under-represented target variable observations
ratings.count.df <- data.frame(table(df$Rating))
rtl.data <- ratings.count.df[ratings.count.df$Freq<10,]
rtl.data
rtl.data$Var1
# Remove ID columns and other irrelevant columns
df <- df[!names(df) %in% c("SIC.Code", "CIK", "Ticker", "Corporation", "Rating.Date")]
# Remove under-represented target variable observations
ratings.count.df <- data.frame(table(df$Rating))
rtl.data <- ratings.count.df[ratings.count.df$Freq<10,]
df <- df[!df$Rating %in% rtl.data$Var1,]
dim(df)
glm.model <- glm(Rating~., data=df)
# Encode categorical columns
colnames(df)
library(mltools)
library(data.table)
library(mltools)
library(data.table)
install.packages("mltools")
library(mltools)
library(data.table)
df <- one_hot(as.data.table(df), cols="Rating.Agency")
dim(df)
new.df <- one_hot(as.data.table(df), cols="Rating.Agency")
new.df <- one_hot(as.data.table(df), cols=c("Rating.Agency"))
df$Rating.Agency <- as.factor(df$Rating.Agency)
new.df <- one_hot(as.data.table(df), cols=c("Rating.Agency"))
glm.model <- glm(Rating~., data=df)
head(df)
head(new.df)
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA−", "A+", "A", "A−", "BBB+", "BBB", "BBB−", "BB+", "BB", "BB−", "B+", "B", "B−", "CCC+", "CCC", "CCC−", "CC", "C", "D")
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors
rating.factors <- as.numeric(rating.factors)
rating.factors
df$Rating
rating.factors
df$Rating
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors
df$Rating
rating.factors
df$Rating
rating.factors
df$Rating
rating.factors
new.df$Rating
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA−", "A+", "A", "A−", "BBB+", "BBB", "BBB−", "BB+", "BB", "BB−", "B+", "B", "B−", "CCC+", "CCC", "CCC−", "CC", "C", "D")
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors
new.df$Rating
unique(new.df$Rating)
ra <- unique(new.df$Rating)
ra
new.df$Rating <- as.factor(new.df$Rating)
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors
ra
new.df$Rating
new.df$Rating[1]
new.df$Rating[2]
new.df$Rating[1]
levels(new.df$Rating)
ra <- levels(new.df$Rating)
rating.order %in% ra
ra %in% rating.order
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors
levels(rating.factors)
levels(new.df$Rating)
levels(rating.factors)
rating.order %in% ra
levels(rating.factors)
levels(new.df$Rating)
levels(rating.factors)
levels(new.df$Rating)
levels(rating.factors)
levels(new.df$Rating)
rating.order %in% ra
ra %in% rating.order
levels(new.df$Rating)
levels(new.df$Rating)
levels(rating.factors)
levels(new.df$Rating) %in% levels(rating.factors)
levels(new.df$Rating)
levels(rating.factors)
setdiff(levels(new.df$Rating), levels(rating.factors))
setdiff(levels(rating.factors), levels(new.df$Rating))
setdiff(levels(new.df$Rating), levels(rating.factors))
setdiff(levels(new.df$Rating), levels(rating.factors))
setdiff(levels(rating.factors), levels(new.df$Rating))
setdiff(levels(new.df$Rating), levels(rating.factors))
setdiff(levels(new.df$Rating), rating.order)
setdiff(rating.order, levels(new.df$Rating))
setdiff(levels(new.df$Rating), rating.order)
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "BB", "BB-", "B+", "B", "B-", "CCC+", "CCC", "CCC-", "CC", "C", "D")
setdiff(levels(new.df$Rating), rating.order)
setdiff(levels(new.df$Rating), rating.order)
setdiff(rating.order, levels(new.df$Rating))
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "BB", "BB-", "B+", "B", "B-", "CCC+", "CCC", "CCC-", "CC", "C", "D")
new.df$Rating <- as.factor(new.df$Rating)
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors
rating.factors <- as.numeric(rating.factors)
rating.factors
new.df$Rating <- rating.factors
glm.model <- glm(Rating~., data=df)
head(new.df)
new.df <- one_hot(as.data.table(df), cols=c("Rating.Agency", "Sector"))
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "BB", "BB-", "B+", "B", "B-", "CCC+", "CCC", "CCC-", "CC", "C", "D")
new.df$Rating <- as.factor(new.df$Rating)
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors <- as.numeric(rating.factors)
new.df$Rating <- rating.factors
new.df$Rating <- rating.factors
new.df$Rating <- rating.factors
head(new.df)
glm.model <- glm(Rating~., data=df)
head(new.df)
new.df <- one_hot(as.data.table(df), cols=c("Rating.Agency", "Sector"))
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "BB", "BB-", "B+", "B", "B-", "CCC+", "CCC", "CCC-", "CC", "C", "D")
new.df$Rating <- as.factor(new.df$Rating)
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors <- as.numeric(rating.factors)
new.df$Rating <- rating.factors
head(new.df)
head(df)
df$Sectors <- as.factor(df$Sector)
new.df <- one_hot(as.data.table(df), cols=c("Rating.Agency", "Sector"))
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "BB", "BB-", "B+", "B", "B-", "CCC+", "CCC", "CCC-", "CC", "C", "D")
new.df$Rating <- as.factor(new.df$Rating)
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors <- as.numeric(rating.factors)
new.df$Rating <- rating.factors
head(new.df)
# Load libraries
library(caret)
library(mltools)
library(data.table)
# Read the data
df <- read.csv("./../data/classification_data/input/corporate_credit_rating.csv")
## Preprocessing
# Correct the data types of columns
df$CIK <- as.factor(df$CIK)
df$SIC.Code <- as.factor(df$SIC.Code)
# Remove data of under-represented rating agencies
rating.agency.freq <- data.frame(table(df$Rating.Agency))
nreq.rating.agencies <- rating.agency.freq[order(rating.agency.freq$Freq, decreasing = TRUE),]
nreq.rating.agencies <- tail(nreq.rating.agencies, 3)
nreq.rating.agencies <- nreq.rating.agencies$Var1
df <- df[!df$Rating.Agency %in% nreq.rating.agencies,]
# Remove correlated columns
num.data <- df %>% dplyr::select(where(is.numeric))
cor_mat <- cor(num.data)
index <- findCorrelation(cor_mat, .75)
col.remove <- colnames(cor_mat)[index]
col.remove <- col.remove[-length(col.remove)]
df <- df[!names(df) %in% col.remove]
# Remove ID columns and other irrelevant columns
df <- df[!names(df) %in% c("SIC.Code", "CIK", "Ticker", "Corporation", "Rating.Date")]
# Remove under-represented target variable observations
ratings.count.df <- data.frame(table(df$Rating))
rtl.data <- ratings.count.df[ratings.count.df$Freq<10,]
df <- df[!df$Rating %in% rtl.data$Var1,]
# Encode categorical columns
# Encode Rating Agencies and Sectors
colnames(df)
df$Rating.Agency <- as.factor(df$Rating.Agency)
df$Sector <- as.factor(df$Sector)
new.df <- one_hot(as.data.table(df), cols=c("Rating.Agency", "Sector"))
# Ecode Target Column
rating.order <- c("AAA", "AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "BB", "BB-", "B+", "B", "B-", "CCC+", "CCC", "CCC-", "CC", "C", "D")
new.df$Rating <- as.factor(new.df$Rating)
rating.factors <- factor(new.df$Rating, levels=rating.order)
rating.factors <- as.numeric(rating.factors)
new.df$Rating <- rating.factors
head(new.df)
glm.model <- glm(Rating~., data=df)
library(inspectdf)
column_types <- inspect_types(df)
column_types %>% show_plot()
column_types <- inspect_types(new.df)
column_types %>% show_plot()
glm.model <- glm(Rating~., data=new.df)
# Save the data with outliers
write.csv(new.df, "preprocessed_data.csv", row.names = TRUE)
# Save the data with outliers
write.csv(new.df, "./../data/classification_data/intermediates/preprocessed_data.csv", row.names = TRUE)
library(car)
# Get the outliers
outliers <- outlierTest(glm.model)
install.packages("car")
library(car)
# Get the outliers
outliers <- outlierTest(glm.model)
exclusion <- names(outliers[[1]])
exclusion
exclusion <- as.numeric(unlist(exclusion))
new.df[exclusion,]
for(i in 1: length(exclusion))
{
new.df = new.df[-x[i],]
}
for(i in 1: length(exclusion))
{
new.df = new.df[-exclusion[i],]
}
# Save this new data to a file
write.csv(new.df, "./../data/classification_data/intermediates/preprocessed_data_without_outliers.csv", row.names = TRUE)
# Load libraries
library(caret)
# Load the data
df <- read.csv("./../data/classification_data/intermediates/preprocessed_data_without_outliers.csv")
train = df[partition,]
# Partitioning the data
partition = createDataPartition(df$Rating, p=0.8, list = FALSE)
train = df[partition,]
test = df[-partition,]
# Model training
glm.model <- glm(Rating~. data=train)
glm.model <- glm(Rating~., data=df)
glm.model <- glm(Rating~., data=train)
summary(glm.model)
library(nnet)
# Model training
multinom.model <- multinom(Rating~., data=train, )
summary(multinom.model)
summary(multinom.model)
# Model training
multinom.model <- multinom(Rating~., data=train, )
# Print the Confusion matrix
confusionMatrix(as.factor(result), as.factor(test$Rating))
# Predict the samples from test data using the model
result <- predict(multinom.model, test)
# Print the Confusion matrix
confusionMatrix(as.factor(result), as.factor(test$Rating))
# Print the Confusion matrix
confusionMatrix(as.factor(result), as.factor(test$Rating))
result
levels(as.factor(result))
setdiff(level(as.factor(test$Rating)), levels(as.factor(result)))
setdiff(levels(as.factor(test$Rating)), levels(as.factor(result)))
